常见浏览器的兼容问题

　　初学html和css时，每天切图，总会遇到很多浏览器兼容性问题。最近一直关注移动平台开发，就html和css来说，不用考虑那么多浏览器兼容性问题。到现在，
	以至于很多浏览器兼容性几乎忘光了。今天把以前总结的知识拿来分享一下，顺便自己也复习一下。当然，其中肯定有很多不足，望指正啊。
 
	1 ie6.0横向margin加倍
	产生因素：块属性、float、有横向margin。
	解决方法：display：inline；

	2 ie6.0下默认有行高
	解决方法：overflow:hidden;或font-size:0;或line-height：xx px；

	3 在各个浏览器下img有空隙(原因是：回车。)
	解决方法:让图片浮动。

	4 一个父标签与几个子标签嵌套，父标签不浮动，子标签float，子标签不撑开父的高度。
	解决方法：a 在子标签最后清浮动{<div style="height:0;clear:both;">&nbsp;</div>}
                  b 父标签添加{overflow：hidden；}
                  c 给父标签设置高度

	5 Ie6下，不识别最大宽、高度和最小宽高度，意即min-width/height和 Max-width/height在ie6中没效果，
	解决方法：(1)：.abc{border:1px blue solid;width:200px;height:200px;}
                          html>body .abc{width:auto;height:auto;min-width:200px;min-height:200px;}
     	   (2)：.abc{width:200px;height:200px;_width:200px;_height:200px;}（因为ie6有一个特征，当定义一个高度时，如果内容超过高度，元素会自动调整高度。）

	6 Ie6里面：如li设宽、高，并且li里面的标签浮动，那么li之间会有间距
	解决方法：li不设宽、高或者li内的标签不浮动

	7  li之间有间距
	解决方法：li 设置vertical-align:middle;

	8 3像素问题：ie6下，当浮动元素与流动元素并列显示时，他们之间会存在三像素问题。
  	 解决方法：用hack技术， 例如：所有浏览器通用 height:100px; 
                                                  ie6专用_height:100px;
                                                  ie7专用*+height:100px; 
                                                  ie6/ie7共用*height:100px;
	9 当定义行内元素为包含框时，且包含框包含的绝对定位元素以百分比为单位进行定位时，会出现混乱。
   	 解决方法：在行内元素里加入{zoom：1；}

	10 当多个浮动元素中间夹杂着HTML注释语句时，如果浮动元素宽度为100%，则在下一行多显示一个上一行最后一个字符。
        解决办法：给浮动元素添加display:inline;。

	11 opacity 定义元素的不透明度
	  filter：alpha（opacity=80）；/*ie支持该属性*/
	  opacity：0.8；/*支持css3的浏览器*/

	12 两个块元素，竖向的margin值不增加，会重叠，其间距为最大margin值。

	13 优先级：被!important 注明的css属性具有最高优先级(.abc{color:red !important;})。但在ie6中!important具有一个bug:在同一组css属性中，!important不起作用。

	14 火狐不识别background-position-y 或background-position-x;

 
---------------------------2014.01.10补充-------------------------------

	15 ie6 不支持 fixed 
	复制代码
	/*对于非IE6可以这样写*/
	#top{  
 	   position:fixed;  
 	   bottom:0;  
 	   right:20px;  
	}  

	/*但是IE6是不支持fixed定位的，需要另外重写*/
	#top{  
  	  position:fixed;  
  	  _position:absolute;  
	   top:0;  
  	  right:20px;  
 	   _bottom:auto;  
 	   _top:expression(eval(document.documentElement.scrollTop));
	}  

	/*使用hack使IE6实现该效果，但这个东东会闪烁，需要以下代码*/
	*html{  
	    background-image:url(about:blank);  
	    background-attachment:fixed;  
	}  

	/*使固定在顶部*/
	#top{  
  	  _position:absolute;  
  	  _bottom:auto;  
  	  _top:expression(eval(document.documentElement.scrollTop));  
	}  

	/*固定在底部*/
	#top{  
 	   _position:absolute;  
 	   _bottom:auto;  
	    _top:expression(eval(document.documentElement.scrollTop+document.documentElement.clientHeight-this.offsetHeight-(parseInt(this.currentStyle.marginTop)||0)-(parseInt(this.currentStyle.marginBottom)||0)));  
	}  
	/*垂直居中*/
	#top{
 	   position:fixed;
 	   top:50%;
 	   margin-top:-50px;
 	   _position:absolute;
 	   _top:expression(eval(document.documentElement.scrollTop+document.documentElement.clientHeight/2)); 
	}


	复制代码

	16  解决 ie6 最大、最小宽高 hack方法
	复制代码
	/* 最小宽度 */
	.min_width{
	    min-width:300px;
	    _width:expression(parseInt(this.clientWidth) < 300 ? "300px" : this.clientWidth);
	}

	/* 最大宽度 */
	.max_width{
 	  max-width:600px;
	   _width:expression(parseInt(this.clientWidth) > 600 ? "600px" : this.clientWidth);
	}

	/* 最小高度 */
	.min_height{
	   min-height:200px;
 	  _height:expression(parseInt(this.clientHeight) < 200 ? "200px" : this.clientHeight);
	}

	/* 最大高度 */
	.max_height{
 	  max-height:400px;
 	  _height:expression(parseInt(this.clientHeight) > 400 ? "400px" : this.clientHeight);
	}
	复制代码
 

	17  z-index不起作用的 bug

	1）ie6下 首先讲讲第一种z-index无论设置多高都不起作用情况。这种情况发生的条件有三个：1、父标签position属性为relative；2、问题标签含有浮动(float)属性。

	2）所有浏览器：它只认第一个爸爸
	层级的高低不仅要看自己，还要看自己的老爸这个后台是否够硬。用术语具体描述为：
	父标签position属性为relative或absolute时，子标签的absolute属性是相对于父标签而言的。而在IE6下，层级的表现有时候不是看子标签的z-index多高，
	而要看它们的父标签的z-index谁高谁低。

	18  ie各个版本hack
	复制代码
	/*类内部hack：*/
   	 .header {_width:100px;}            /* IE6专用*/
   	 .header {*+width:100px;}        /* IE7专用*/
  	  .header {*width:100px;}            /* IE6、IE7共用*/
  	  .header {width:100px\0;}        /* IE8、IE9共用*/
  	  .header {width:100px\9;}        /* IE6、IE7、IE8、IE9共用*/
  	  .header {width:330px\9\0;}    /* IE9专用*/

	/*选择器Hack：*/
	    *html .header{}        /*IE6*/ 
	    *+html .header{}    /*IE7*/ 








	兼容性处理要点 

1、DOCTYPE 影响 CSS 处理 

2、FF: 设置 padding 后， div 会增加 height 和 width， 但 IE 不会， 故需要用 !important 多设一个 height 和 width 

3、FF: 支持 !important， IE 则忽略， 可用 !important 为 FF 特别设置样式 

4、div 的垂直居中问题: vertical-align:middle; 将行距增加到和整个DIV一样高 line-height:200px; 然后插入文字，就垂直居中了。缺点是要控制内容不要换行 

5、在mozilla firefox和IE中的BOX模型解释不一致导致相差2px解决方法： 

div{margin:30px!important;margin:28px;} 

注意这两个margin的顺序一定不能写反，!important这个属性IE不能识别，但别的浏览器可以识别。所以在IE下其实解释成这样： 

div{maring:30px;margin:28px} 

重复定义的话按照最后一个来执行，所以不可以只写margin:XXpx!important; 

浏览器差异 
1、ul和ol列表缩进问题 

消除ul、ol等列表的缩进时，样式应写成：list-style:none;margin:0px;padding:0px; 
其中margin属性对IE有效，padding属性对FireFox有效。 

[注]经验证，在IE中，设置margin:0px可以去除列表的上下左右缩进、空白以及列表编号或圆点，设置padding对样式没有影响；在 Firefox 中，设置margin:0px仅仅可以去除上下的空白，设置padding:0px后仅仅可以去掉左右缩进，还必须设置list- style:none才 能去除列表编号或圆点。也就是说，在IE中仅仅设置margin:0px即可达到最终效果，而在Firefox中必须同时设置margin:0px、 padding:0px以及list-style:none三项才能达到最终效果。 

2、CSS透明问题 

IE：filter:progid:DXImageTransform.Microsoft.Alpha(style=0,opacity=60)。 
FF：opacity:0.6。 
[注] 最好两个都写，并将opacity属性放在下面。 

3、CSS圆角问题 

IE：ie7以下版本不支持圆角。 
FF： -moz-border-radius:4px，或者-moz-border-radius-topleft:4px;-moz- border- radius-topright:4px;-moz-border-radius-bottomleft:4px;-moz- border- radius- bottomright:4px;。 
[注] 圆角问题是CSS中的经典问题，建议使用JQuery框架集来设置圆角，让这些复杂的问题留给别人去想吧。不过jQuery的圆角只看到支持整个区域的圆角，没有支持边框的圆角，不过这个边框的圆角可以通过一些简单的手段来实现，下次有机会介绍下。 

4、cursor:hand VS cursor:pointer 

问题说明：firefox不支持hand，但ie支持pointer ，两者都是手形指示。 
解决方法：统一使用pointer。 

5、字体大小定义不同 

对字体大小small的定义不同，Firefox中为13px，而IE中为16px，差别挺大。 

解决方法：使用指定的字体大小如14px。 

并列排列的多个元素（图片或者链接）的div和div之间，代码中的空格和回车在firefox中都会被忽略，而IE中却默认显示为空格（约3px）。 

6、CSS双线凹凸边框 
IE：border:2px outset;。 
FF： -moz-border-top-colors: #d4d0c8 white;-moz-border-left-colors: #d4d0c8 white;-moz-border-right-colors:#404040 #808080;-moz-border-bottom-colors:#404040 #808080; 

浏览器bug 
1、IE的双边距bug 

设置为float的div在ie下设置的margin会加倍。这是一个ie6都存在的bug。 

解决方案：在这个div里面加上display:inline; 

例如： 

<#div id=”imfloat”> 

相应的css为 

以下为引用的内容： 

复制代码代码如下:

#IamFloat{ 
float:left; 
margin:5px;/*IE下理解为10px*/ 
display:inline;/*IE下再理解为5px*/ 
} 
#IamFloat{ 
float:left; 
margin:5px;/*IE下理解为10px*/ 
display:inline;/*IE下再理解为5px*/ 
} 

关于CSS中的问题实在太多了，甚至同样的CSS定义在不同的页面标准中的显示效果都是不一样的。一个合乎发展的建议是，
页面采用标准XHTML标准编写，较少使用table，CSS定义尽量依照标准DOM，同时兼顾IE、Firefox、Opera等主流浏览器。
很多情况下，FF和 Opera的CSS解释标准更贴近CSS标准，也更具有规范性。 

2、IE选择符空格BUG 
今天在给博客的段落样式设置首字符样式的时候发现，原来一个空格也可以使样式失效。 

请看以下代码： 


复制代码代码如下:

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "//www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"> 
<html xmlns="//www.w3.org/1999/xhtml"> 
<head> 
<title></title> 
<style type="text/css"> 
<!-- 
p{font-size:12px;} 
p:first-letter{font-size:300%} 
--> 
</style> 
</head> 
<body> 

<p>对于世界而言，你是一个人；但是对于某个人，你是他的整个世界。纵然伤心，也不要愁眉不展，因为你不知是谁会爱上你的笑容。</p> 
</body> 
</html> 
[/code] 


复制代码代码如下:

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "//www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"> 
<html xmlns="//www.w3.org/1999/xhtml"> 
<head> 
<title></title> 
<style type="text/css"> 
<!-- 
p{font-size:12px;} 
p:first-letter{font-size:300%} 
--> 
</style> 
</head> 
<body> 
<p>对于世界而言，你是一个人；但是对于某个人，你是他的整个世界。纵然伤心，也不要愁眉不展，因为你不知是谁会爱上你的笑容。</p> 
</body> 
</html> 

这段代码对<p>的首字符样式定义在IE6上看是没有效果的（IE7没测试），而在p:first-letter和{font-size:300%}加上空格，
也就是p:first-letter {font-size:300%}后，显示就正常了。但是同样的代码，在FireFox下看是正常的。按道理说，
p:first-letter{font-size:300%}的写法是没错的。那么问题出在哪里呢？答案是伪类中的连字符”-”。IE有个BUG，
在处理伪类时，如果伪类的名称中带有连字符”-”，伪类名称后面就得跟一个空格，不然样式的定义就无效。而在FF中，
加不加空格都可以正常处理。